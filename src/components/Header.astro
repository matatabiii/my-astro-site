---
const { isHome, hero, root } = Astro.props
---
<header id="header" data-view-over="header" class="l-header">
  <div class="l-header__main">
    <div class="l-header-base">
      {
        isHome ? (
          <h1 class="c-logo">h1</h1>
        ) : (
          <div class="c-logo">div</div>
        )
      }
    </div>

    <div data-drawer="3,l-nav" class="l-header__nav l-nav l:u-hidden">
      <ul class="l-nav__items">
        <li class="l-nav__item">
          <a class="l-nav__item-link" href={`${root}`}><span class="l-nav__item-label">ホーム</span></a>
        </li>
        <li class="l-nav__item">
          <a class="l-nav__item-link" href={`${root}post/`}><span class="l-nav__item-label">投稿</span></a>
        </li>
        <li class="l-nav__item">
          <a class="l-nav__item-link" href={`${root}form/`}><span class="l-nav__item-label">フォーム</span></a>
        </li>
        <li class="l-nav__item">
          <a class="l-nav__item-link" href={`${root}sample/`}><span class="l-nav__item-label">サンプル</span></a>
        </li>
      </ul>
    </div>

    <div id="nav" data-component="nav" class="l-header__nav">
      <nav id="drawer" data-logic="drawer" aria-label="グローバルナビゲーション">
        <div data-logic="drawer-scroll">
          <div data-logic="drawer-container">

          </div>
        </div>
      </nav>
    </div>
  </div>

  {
    !isHome && hero?.parentTitle && (
      <div>{hero.parentTitle}</div>
    )
  }
  {
    !isHome && hero?.mainTitle && (
      <h1>{hero.mainTitle}</h1>
    )
  }
  {
    !isHome && hero?.subTitle && (
      <div>{hero.subTitle}</div>
    )
  }
</header>

<button data-logic="drawer-trigger" id="trigger" type="button" class="l-trigger L:u-hidden">
  <span class="l-trigger__label">メニュー</span>
  <span class="l-trigger__u"></span>
</button>
