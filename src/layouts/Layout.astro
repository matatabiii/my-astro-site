---
import '../styles/main.css'
// import '@splidejs/splide/css/core'

import { siteConfig as config } from '../../site.config.mjs'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import Sidebar from '../components/Sidebar.astro'
import Breadcrumbs from '../components/Breadcrumbs.astro'
export const defaultRoot = import.meta.env.BASE_URL

// Astro.site
// Astro.url.pathname
const { page, seo, hero, root, breadcrumbs } = Astro.props
const urlOrigin = Astro.url.origin + root
const canonicalURL = seo?.canonical || new URL(Astro.url.pathname, Astro.site)
const { siteName, ogImage, msapplicationTileColor, themeColor, charset, locale, favicon, appleTouchIcon } = config
const title = seo?.titleTag || seo?.title + ' | ' + siteName
---

<!DOCTYPE html>
<html class="no-js" lang="ja" prefix="og: http://ogp.me/ns#" data-root={root}>
  <head>
    <meta charset={charset} />
    <meta name="format-detection" content="telephone=no" />
    <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
    <title>{title}</title>{seo?.description && <meta name="description" content={seo?.description} />}{seo?.keywords && <meta name="keywords" content={seo?.keywords} />}
    <link rel="canonical" href={canonicalURL} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="og:url" content={seo?.ogURL || canonicalURL} />
    <meta property="og:locale" content={seo?.ogLocale || locale} />
    <meta property="og:title" content={title} />
    <meta property="og:type" content={seo?.ogType || page.type === 'home' ? 'website' : 'article'} />
    <meta property="og:image" content={seo?.ogImage || `${urlOrigin}assets/images/${ogImage}`} />
    <meta property="og:site_name" content={siteName} />
    {seo?.description && <meta name="og:description" content={seo?.description} />}
    <meta name="msapplication-TileColor" content={msapplicationTileColor} />
    <meta name="theme-color" content={themeColor} />
    <link rel="icon" href={`${urlOrigin}${favicon}`} />
    <link rel="apple-touch-icon" href={`${urlOrigin}${appleTouchIcon}`} />
    {/* <link rel="preconnect" href="https://fonts.googleapis.com" /> */}
    {/* <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;700&display=swap" rel="stylesheet" media="print" onload="this.media='all'" /> */}

    {
      /*
      <script is:inline define:vars={{ root }}>
        document.documentElement.classList.add('js')
        document.documentElement.classList.remove('no-js')
        ;(async () => {
          // eslint-disable-next-line n/no-deprecated-api
          const response = await window.fetch(`${root}assets/svg/sprite.svg`)
          if (response.ok) {
            const text = await response.text()
            document.body.insertAdjacentHTML('afterbegin', text)
            return
          }
          throw new Error(response.status)
        })()
      </script>
    */
    }

    <script>
      import '../js/main.js'
    </script>

    <!-- Google Tag Manager -->
    {import.meta.env.MODE === 'production' && <script is:inline />}
    <!-- End Google Tag Manager -->
  </head>
  <body id="body" class={`l-body ${page.group ? `l-body--${page.group}` : ''}${page.sub ? 'l-body--in-sub' : ''}`} data-slug={page.slug ? page.slug : ''}>
    <!-- Google Tag Manager (noscript) -->
    {import.meta.env.MODE === 'production' && <script is:inline />}
    <!-- End Google Tag Manager (noscript) -->

    <Header isHome={page.type === 'home'} page={page} hero={hero} root={root} />
    <main id="main" role="main" class="l-body__main">
      {breadcrumbs && <Breadcrumbs breadcrumbs={breadcrumbs} root={root} />}
      <div class="l-body__content">
        <div class="l-body__content-main">
          <slot />
        </div>

        {
          page?.sub && (
            <div class="l-body__content-sub">
              <Sidebar isHome={page.type === 'home'} page={page} root={root} />
            </div>
          )
        }
      </div>
    </main>
    <Footer isHome={page.type === 'home'} page={page} root={root} />
  </body>
</html>
