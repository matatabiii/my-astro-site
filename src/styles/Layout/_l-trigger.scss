/* trigger */
@use 'sass:map'; // sassの機能

@use '../Foundation/Settings/variable' as *;
@use '../Foundation/Tools/functions' as *;
@use '../Foundation/Tools/mixins' as *;

// https://github.com/dmnsgn/sass-easing/blob/master/_easings.scss
@use './../../../node_modules/sass-easing/easings' as *;

// ハンバーガーメニューの情報
$trigger-style: (
  'width': 54px,
  'height': 54px,
  'border-width': 2px,
  'border-style': solid,
  'border-color': color('theme'),
  'trigger-radius': 0,
  'open-bg-color': color('theme'),
  'open-line-color': #fff,
  'open-label-color': #fff,
  'close-bg-color': color('theme'),
  'close-line-color': #fff,
  'close-label-color': #fff,
  'line-width': 26px,
  'line-height': 2px,
  'line-radius': 2px,
  'line-space': 5px,
  'label-size': 5px,
  'top': 8px,
  'right': 8px,
) !default;

$calced-line-space: map.get($trigger-style, 'line-height') + map.get($trigger-style, 'line-space');

/*////////////////////////////
ハンバーガーメニュー
////////////////////////////*/
button.l-trigger:focus {
  outline: none;
}
.l-trigger {
  outline: none;
  // position: absolute;
  position: fixed;
  z-index: z-index('trigger');
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border: map.get($trigger-style, 'border-width') map.get($trigger-style, 'border-style') map.get($trigger-style, 'border-color');
  border-radius: map.get($trigger-style, 'trigger-radius');
  top: map.get($trigger-style, 'top');
  right: map.get($trigger-style, 'right');
  // left: 0;
  width: map.get($trigger-style, 'width');
  height: map.get($trigger-style, 'height');
  background: map.get($trigger-style, 'close-bg-color');
  color: map.get($trigger-style, 'close-line-color');
  transition: color 0.4s $easeInOutCubic, background 0.4s $easeInOutCubic, box-shadow 0.4s $easeInOutCubic, transform 0.4s ease-in-out,
    top 0.4s $easeInOutCubic, right 0.4s $easeInOutCubic, left 0.4s $easeInOutCubic;

  @include action('hover') {
    // background: #333;
    // box-shadow: 0 0 10px -2px rgb(116 116 116 / 35%);
  }

  // 3本ライン .l-trigger__u
  &__u {
    display: block;
    width: map.get($trigger-style, 'line-width');
    height: map.get($trigger-style, 'line-height');
    background: currentColor;
    border-radius: map.get($trigger-style, 'line-radius');
    position: relative;
    margin: 8px auto;
    transition: background 0.4s $easeInOutCubic, transform 0.4s $easeInOutCubic 0.2s;
    // transform: translate3d(-5px, 0, 0);
    // transition: transform 0.4s $easeInOutQuint;

    &::before,
    &::after {
      content: '';
      display: block;
      width: map.get($trigger-style, 'line-width');
      height: map.get($trigger-style, 'line-height');
      position: absolute;
      background: currentColor;
      border-radius: map.get($trigger-style, 'line-radius');
      transform-origin: center center;
      // transform: translate3d(10px, 0, 0);
    }

    &::before {
      bottom: $calced-line-space;
      transition: transform 0.4s $easeInOutQuint, bottom 0.4s $easeInOutQuint 0.2s, right 0.4s $easeInOutQuint 0.2s;
    }

    &::after {
      top: $calced-line-space;
      transition: transform 0.4s $easeInOutQuint, top 0.4s $easeInOutQuint 0.2s, left 0.4s $easeInOutQuint 0.2s;
    }
  }

  // ラベル .l-trigger__label
  &__label {
    order: 1;
    line-height: 1;
    display: block;
    font-size: map.get($trigger-style, 'label-size');
    font-family: family('sans');
    font-size: rem(11);
    font-weight: 400;
    margin-top: 6px;
    margin-bottom: 0;
    color: map.get($trigger-style, 'close-label-color');
  }

  // Open
  @include isAriaExpanded() {
    color: map.get($trigger-style, 'open-line-color');
    background: map.get($trigger-style, 'open-bg-color');
    transform: translate3d(0, 0, 0);
    top: 10px;
    right: 10px;
    transition: background 0.4s $easeInOutCubic, transform 0.4s $easeInOutCubic, top 0.4s $easeInOutCubic, right 0.4s $easeInOutCubic,
      left 0.4s $easeInOutCubic;
    outline: none;

    // 3本ライン
    .l-trigger__u {
      background: transparent;
      transform: translate3d(0, 0, 0);
      // transition: transform 0.4s $easeInOutQuint 0.2s;

      &::before {
        bottom: 0;
        right: 0;
        transform: translate3d(0, 0, 0) rotate(45deg);
        transition: transform 0.4s $easeInOutQuint 0.2s, bottom 0.4s $easeInOutQuint, right 0.4s $easeInOutQuint;
      }

      &::after {
        top: 0;
        left: 0;
        transform: translate3d(0, 0, 0) rotate(-45deg);
        transition: transform 0.4s $easeInOutQuint 0.2s, top 0.4s $easeInOutQuint, left 0.4s $easeInOutQuint;
      }
    }

    // ラベル
    .l-trigger__label {
      color: map.get($trigger-style, 'open-label-color');
    }
  }
}
